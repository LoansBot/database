name: CI

on: [push]

jobs:
  test_migrations:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.7, 3.8]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install python dependencies
      run: |
        sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev postgresql-common libpq-dev
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82,E303,F401 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Prepare test settings
      working-directory: ./tests
      run: |
        cp ../settings.ini.sample ./settings.ini
    - name: Run migration tests
      working-directory: ./tests
      env:
        DATABASE_HOST: postgres
        DATABASE_PORT: ${{ job.services.postgres.ports['5432'] }}
      run: |
        python test_migrations.py --confirm
    - name: Run backup and restore tests
      working-directory: ./tests
      env:
        DATABASE_HOST: postgres
        DATABASE_PORT: ${{ job.services.postgres.ports['5432'] }}
        AWS_S3_FOLDER: test
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        python test_backup_and_restore.py --confirm
